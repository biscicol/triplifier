#summary Information on using the Command-line triplifier

= Command-Line Triplifier =

To run the triplifier from the command-line, you can download a pre-compiled executable from the  [https://code.google.com/p/triplifier/source/browse/#svn%2Ftrunk%2Fdownloads downloads folder] (part of the SVN repository).

Once you download and install the package on your system you just type "triplify" on the command prompt and the following help will be displayed:

{{{
usage: triplify input_files [-debug] [-h] [-hasGuids] [-i <arg>] [-m
       <arg>] [-o <arg>] [-roots <arg>] [-v]
 -debug                   Output debug statements and do not delete
                          processing files, enabling the user to debug
                          application
 -h,--help                print this help message and exit
 -hasGuids                Use this if you have persistent identifiers
                          already in place-- that is, they are resolvable,
                          persistent, and especially you must ensure they
                          are all properly formatted URIs.  If you do not
                          add this option, the default is to use a system
                          specific prefix.
 -i,--input <arg>         Set the input data file type to one of:
                          ...genbank
                          ...dwc (Darwin Core Archive)
 -m,--mappingFile <arg>   Provide a D2RQ mapping file
                          (http://d2rq.org/d2rq-language).  If this option
                          is set it will ignore all other steps, and
                          triplify only based on the mapping file.
 -o,--output <arg>        Set the output format to one of:
                          ...N3
                          ...NTriple (default)
                          ...Turtle
                          ...DOT (Graphviz)
 -roots <arg>             Provide a deepRoots file (see
                          http://code.google.com/p/bcid/wiki/deepRoots)
                          This option will use Deep Roots mapping for
                          generated GUIDs.
 -v,--version             Print the program version and exit.
}}}

==Examples==

Suppose we want to triplify a darwin core archive and write output to a specified directory.  We would use the following command:

{{{
./triplify myDarwinCoreArchive.zip -o /myHomeDir/output -t dwc

Beginning SQlite creation & connection
Fixing missing or empty "eventID" column.
Fixing missing or empty "locationID" column.
Fixing missing or empty "taxonID" column.
Fixing missing or empty "identificationID" column.
Removing unneeded columns from the main table.
Beginning simplifier instantiation
Beginning mapping file creation
Beginning triple file creation
Done! see, /myHomeDir/output/myDarwinCoreArchive.zip.triples.ttl
}}}

==Running from Source==
You may also choose to download the entire source tree, build using [http://ant.apache.org/ ant], and run using java itself from the commandline:
{{{
svn checkout http://triplifier.googlecode.com/svn/trunk/ triplifier-read-only
cd triplifier-read-only/
mkdir dist
ant
java -classpath .:./out/triplifier:./lib/* triplify -h
java -classpath .:./out/triplifier/:./lib/* triplify myDarwinCoreArchive.zip -t dwc
}}}